---
- name: Install Apache and Upload my web Page
  hosts: workers
  become: yes

# Секция переменных, которые могут также находится и в default vars
  vars:
#    source_file: ./index.html
#    destin_file: /var/www/html
    source_folder: ./
    destin_folder: /var/www/html

    message1: "This is a test message1"

# Секция для запуска заданий и выполнения действий
  tasks:
    #Установим сервер httpd
  - name: Install Apache Web Server
    yum: name=httpd state=installed
    #Генерируем фаил из index.j2 в index.html
  - name: Generate index.html file
    template: src={{ source_folder }}/index.j2 dest={{ destin_folder }}/index.html mode=0555
    notify: 
      - Restart Apache Service
#    #Копируем фаил с мастер хоста ансибл на хосты workers в инвентори
#  - name: Copy MyHomePage
#    copy: src={{ source_file }} dest={{ destin_file }} mode=0555
    # Запустим службу и включим в автозагрузку
  - name: Start service Webserver and enable it on boot
    service: name=httpd state=started enabled=yes
################################# тесты с выводом переменных
  #собираем текст в большую переменную full_message
  - set_fact: full_message="Text my message1 {{ message1 }}"
  # Выводим переменную full_message
  - debug:
      var: full_message
  # выводим переменную message1
  - debug: msg="{{ message1 }}"
  - debug: 
      msg: "{{ message1 }}"
  - debug: 
      var: message1
  # записываем значение вывода команды на хосте в переменную results_uptime
  - shell: uptime
    register: results_uptime
  # Выводим переменную results_uptime
  - debug:
      var: results_uptime
  # Выводим переменную кусок json из results_uptime
  - debug:
      var: results_uptime.stdout

#Этот блок исполнится только тогда когда os будет из radhat, а сама переменная ansible_os_family - определится при Greating Facts при запуске плейбука
  - block:  #======= Block for RadHat
     - name: Echo os Family
       shell: echo 'RadHat os family' ; uname -a
       register: results_RadHat_block
     - debug:
         var: results_RadHat_block.stdout_lines
    when: ansible_os_family == "RedHat"

# Секция для автозапуска по событию notify
  handlers:
  #этот хендлер запустится когда будет таска с  "notify: Restart Apache Service"
  - name: Restart Apache Service
    service: name=httpd state=restarted

#- hosts: masters # пример настройки фаервола
#  gather_facts: false
#  become: true
#  tasks:
#  - name: Install firewalld
#    package: name="firewalld" state="latest"
#
#  - name: Configure firewall
#    block:
#    - firewalld: port="22/tcp" state="enabled" permanent="true"      # sshd
#    - firewalld: port="6443/tcp" state="enabled" permanent="true"      # Kubernetes API server
#    - firewalld: port="2379-2380/tcp" state="enabled" permanent="true" # etcd server client API
#    - firewalld: port="10250-10259/tcp" state="enabled" permanent="true" # Kubelet API , kube-scheduler, kube-controller-manager
#      notify: Reload Firewalld Service
#
#  handlers:
#  #этот хендлер запустится когда будет таска с  "notify: Reload Firewalld Service"
#  - name: Reload Firewalld Service
#    systemd: name="firewalld" state="reloaded" enabled="yes"

